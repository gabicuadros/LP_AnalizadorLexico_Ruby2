Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ARRAY
    BEGIN
    BOOLEANO
    BREAK
    CASE
    CDER
    CIZQ
    CLASS
    COMA
    DEF
    DOBLECOMILLA
    END
    ENSURE
    FALSE
    FILE
    FOR
    GETS
    HASH
    IMPRIMIR
    IN
    INITIALIZE
    LDER
    LINE
    LIZQ
    MODULE
    NEGACION
    NEW
    NEXT
    NIL
    NOT
    PUNTO
    PUNTOYCOMA
    RANGO
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    THEN
    TRUE
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> algoritmo
Rule 1     algoritmo -> imprimir
Rule 2     algoritmo -> asignacion
Rule 3     algoritmo -> expresion
Rule 4     algoritmo -> comparacion
Rule 5     algoritmo -> sentenciaIf
Rule 6     algoritmo -> comparacionLog
Rule 7     algoritmo -> sentenciaWhile
Rule 8     sentenciaIf -> IF LPAREN comparacion RPAREN DOSPUNTOS algoritmo
Rule 9     sentenciaWhile -> WHILE LPAREN comparacion RPAREN DOSPUNTOS algoritmo
Rule 10    sentenciaIgualA -> valor IGUALA valor
Rule 11    asignacion -> VARIABLE IGUAL expresion
Rule 12    imprimir -> print
Rule 13    imprimir -> puts
Rule 14    print -> PRINT LPAREN expresion RPAREN
Rule 15    puts -> PUTS expresion
Rule 16    expresion -> valor
Rule 17    comparacion -> expresion operadorCom expresion
Rule 18    comparacionLog -> comparacion operadorLog comparacion
Rule 19    expresion -> valor operadorMat expresion
Rule 20    operadorMat -> MAS
Rule 21    operadorMat -> RESTA
Rule 22    operadorMat -> DIV
Rule 23    operadorMat -> PROD
Rule 24    operadorMat -> POTENCIA
Rule 25    operadorMat -> MOD
Rule 26    operadorCom -> MAYOR
Rule 27    operadorCom -> MENOR
Rule 28    operadorCom -> MAYORIGU
Rule 29    operadorCom -> MENORIGU
Rule 30    operadorCom -> DIFERENTE
Rule 31    operadorCom -> sentenciaIgualA
Rule 32    operadorLog -> OPAND
Rule 33    operadorLog -> OPOR
Rule 34    operadorLog -> OPXOR
Rule 35    operadorLog -> AND
Rule 36    operadorLog -> OR
Rule 37    valor -> ENTERO
Rule 38    valor -> VARIABLE
Rule 39    valor -> CADENA
Rule 40    valor -> DECIMAL

Terminals, with rules where they appear

ALIAS                : 
AND                  : 35
ARRAY                : 
BEGIN                : 
BOOLEANO             : 
BREAK                : 
CADENA               : 39
CASE                 : 
CDER                 : 
CIZQ                 : 
CLASS                : 
COMA                 : 
DECIMAL              : 40
DEF                  : 
DIFERENTE            : 30
DIV                  : 22
DOBLECOMILLA         : 
DOSPUNTOS            : 8 9
END                  : 
ENSURE               : 
ENTERO               : 37
FALSE                : 
FILE                 : 
FOR                  : 
GETS                 : 
HASH                 : 
IF                   : 8
IGUAL                : 11
IGUALA               : 10
IMPRIMIR             : 
IN                   : 
INITIALIZE           : 
LDER                 : 
LINE                 : 
LIZQ                 : 
LPAREN               : 8 9 14
MAS                  : 20
MAYOR                : 26
MAYORIGU             : 28
MENOR                : 27
MENORIGU             : 29
MOD                  : 25
MODULE               : 
NEGACION             : 
NEW                  : 
NEXT                 : 
NIL                  : 
NOT                  : 
OPAND                : 32
OPOR                 : 33
OPXOR                : 34
OR                   : 36
POTENCIA             : 24
PRINT                : 14
PROD                 : 23
PUNTO                : 
PUNTOYCOMA           : 
PUTS                 : 15
RANGO                : 
REDO                 : 
RESCUE               : 
RESTA                : 21
RETRY                : 
RETURN               : 
RPAREN               : 8 9 14
SELF                 : 
SUPER                : 
THEN                 : 
TRUE                 : 
UNDEF                : 
UNLESS               : 
UNTIL                : 
VARIABLE             : 11 38
WHEN                 : 
WHILE                : 9
YIELD                : 
error                : 

Nonterminals, with rules where they appear

algoritmo            : 8 9 0
asignacion           : 2
comparacion          : 4 8 9 18 18
comparacionLog       : 6
expresion            : 3 11 14 15 17 17 19
imprimir             : 1
operadorCom          : 17
operadorLog          : 18
operadorMat          : 19
print                : 12
puts                 : 13
sentenciaIf          : 5
sentenciaIgualA      : 31
sentenciaWhile       : 7
valor                : 10 10 16 19

Parsing method: LALR

state 0

    (0) S' -> . algoritmo
    (1) algoritmo -> . imprimir
    (2) algoritmo -> . asignacion
    (3) algoritmo -> . expresion
    (4) algoritmo -> . comparacion
    (5) algoritmo -> . sentenciaIf
    (6) algoritmo -> . comparacionLog
    (7) algoritmo -> . sentenciaWhile
    (12) imprimir -> . print
    (13) imprimir -> . puts
    (11) asignacion -> . VARIABLE IGUAL expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (17) comparacion -> . expresion operadorCom expresion
    (8) sentenciaIf -> . IF LPAREN comparacion RPAREN DOSPUNTOS algoritmo
    (18) comparacionLog -> . comparacion operadorLog comparacion
    (9) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN DOSPUNTOS algoritmo
    (14) print -> . PRINT LPAREN expresion RPAREN
    (15) puts -> . PUTS expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    VARIABLE        shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    PRINT           shift and go to state 15
    PUTS            shift and go to state 16
    ENTERO          shift and go to state 17
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    algoritmo                      shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    expresion                      shift and go to state 4
    comparacion                    shift and go to state 5
    sentenciaIf                    shift and go to state 6
    comparacionLog                 shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    print                          shift and go to state 9
    puts                           shift and go to state 10
    valor                          shift and go to state 12

state 1

    (0) S' -> algoritmo .



state 2

    (1) algoritmo -> imprimir .

    $end            reduce using rule 1 (algoritmo -> imprimir .)


state 3

    (2) algoritmo -> asignacion .

    $end            reduce using rule 2 (algoritmo -> asignacion .)


state 4

    (3) algoritmo -> expresion .
    (17) comparacion -> expresion . operadorCom expresion
    (26) operadorCom -> . MAYOR
    (27) operadorCom -> . MENOR
    (28) operadorCom -> . MAYORIGU
    (29) operadorCom -> . MENORIGU
    (30) operadorCom -> . DIFERENTE
    (31) operadorCom -> . sentenciaIgualA
    (10) sentenciaIgualA -> . valor IGUALA valor
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    $end            reduce using rule 3 (algoritmo -> expresion .)
    MAYOR           shift and go to state 21
    MENOR           shift and go to state 22
    MAYORIGU        shift and go to state 23
    MENORIGU        shift and go to state 24
    DIFERENTE       shift and go to state 25
    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    operadorCom                    shift and go to state 20
    sentenciaIgualA                shift and go to state 26
    valor                          shift and go to state 27

state 5

    (4) algoritmo -> comparacion .
    (18) comparacionLog -> comparacion . operadorLog comparacion
    (32) operadorLog -> . OPAND
    (33) operadorLog -> . OPOR
    (34) operadorLog -> . OPXOR
    (35) operadorLog -> . AND
    (36) operadorLog -> . OR

    $end            reduce using rule 4 (algoritmo -> comparacion .)
    OPAND           shift and go to state 30
    OPOR            shift and go to state 31
    OPXOR           shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34

    operadorLog                    shift and go to state 29

state 6

    (5) algoritmo -> sentenciaIf .

    $end            reduce using rule 5 (algoritmo -> sentenciaIf .)


state 7

    (6) algoritmo -> comparacionLog .

    $end            reduce using rule 6 (algoritmo -> comparacionLog .)


state 8

    (7) algoritmo -> sentenciaWhile .

    $end            reduce using rule 7 (algoritmo -> sentenciaWhile .)


state 9

    (12) imprimir -> print .

    $end            reduce using rule 12 (imprimir -> print .)


state 10

    (13) imprimir -> puts .

    $end            reduce using rule 13 (imprimir -> puts .)


state 11

    (11) asignacion -> VARIABLE . IGUAL expresion
    (38) valor -> VARIABLE .

    IGUAL           shift and go to state 35
    MAS             reduce using rule 38 (valor -> VARIABLE .)
    RESTA           reduce using rule 38 (valor -> VARIABLE .)
    DIV             reduce using rule 38 (valor -> VARIABLE .)
    PROD            reduce using rule 38 (valor -> VARIABLE .)
    POTENCIA        reduce using rule 38 (valor -> VARIABLE .)
    MOD             reduce using rule 38 (valor -> VARIABLE .)
    MAYOR           reduce using rule 38 (valor -> VARIABLE .)
    MENOR           reduce using rule 38 (valor -> VARIABLE .)
    MAYORIGU        reduce using rule 38 (valor -> VARIABLE .)
    MENORIGU        reduce using rule 38 (valor -> VARIABLE .)
    DIFERENTE       reduce using rule 38 (valor -> VARIABLE .)
    ENTERO          reduce using rule 38 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 38 (valor -> VARIABLE .)
    CADENA          reduce using rule 38 (valor -> VARIABLE .)
    DECIMAL         reduce using rule 38 (valor -> VARIABLE .)
    $end            reduce using rule 38 (valor -> VARIABLE .)


state 12

    (16) expresion -> valor .
    (19) expresion -> valor . operadorMat expresion
    (20) operadorMat -> . MAS
    (21) operadorMat -> . RESTA
    (22) operadorMat -> . DIV
    (23) operadorMat -> . PROD
    (24) operadorMat -> . POTENCIA
    (25) operadorMat -> . MOD

    MAYOR           reduce using rule 16 (expresion -> valor .)
    MENOR           reduce using rule 16 (expresion -> valor .)
    MAYORIGU        reduce using rule 16 (expresion -> valor .)
    MENORIGU        reduce using rule 16 (expresion -> valor .)
    DIFERENTE       reduce using rule 16 (expresion -> valor .)
    ENTERO          reduce using rule 16 (expresion -> valor .)
    VARIABLE        reduce using rule 16 (expresion -> valor .)
    CADENA          reduce using rule 16 (expresion -> valor .)
    DECIMAL         reduce using rule 16 (expresion -> valor .)
    $end            reduce using rule 16 (expresion -> valor .)
    OPAND           reduce using rule 16 (expresion -> valor .)
    OPOR            reduce using rule 16 (expresion -> valor .)
    OPXOR           reduce using rule 16 (expresion -> valor .)
    AND             reduce using rule 16 (expresion -> valor .)
    OR              reduce using rule 16 (expresion -> valor .)
    RPAREN          reduce using rule 16 (expresion -> valor .)
    MAS             shift and go to state 37
    RESTA           shift and go to state 38
    DIV             shift and go to state 39
    PROD            shift and go to state 40
    POTENCIA        shift and go to state 41
    MOD             shift and go to state 42

    operadorMat                    shift and go to state 36

state 13

    (8) sentenciaIf -> IF . LPAREN comparacion RPAREN DOSPUNTOS algoritmo

    LPAREN          shift and go to state 43


state 14

    (9) sentenciaWhile -> WHILE . LPAREN comparacion RPAREN DOSPUNTOS algoritmo

    LPAREN          shift and go to state 44


state 15

    (14) print -> PRINT . LPAREN expresion RPAREN

    LPAREN          shift and go to state 45


state 16

    (15) puts -> PUTS . expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    expresion                      shift and go to state 46
    valor                          shift and go to state 12

state 17

    (37) valor -> ENTERO .

    MAS             reduce using rule 37 (valor -> ENTERO .)
    RESTA           reduce using rule 37 (valor -> ENTERO .)
    DIV             reduce using rule 37 (valor -> ENTERO .)
    PROD            reduce using rule 37 (valor -> ENTERO .)
    POTENCIA        reduce using rule 37 (valor -> ENTERO .)
    MOD             reduce using rule 37 (valor -> ENTERO .)
    MAYOR           reduce using rule 37 (valor -> ENTERO .)
    MENOR           reduce using rule 37 (valor -> ENTERO .)
    MAYORIGU        reduce using rule 37 (valor -> ENTERO .)
    MENORIGU        reduce using rule 37 (valor -> ENTERO .)
    DIFERENTE       reduce using rule 37 (valor -> ENTERO .)
    ENTERO          reduce using rule 37 (valor -> ENTERO .)
    VARIABLE        reduce using rule 37 (valor -> ENTERO .)
    CADENA          reduce using rule 37 (valor -> ENTERO .)
    DECIMAL         reduce using rule 37 (valor -> ENTERO .)
    $end            reduce using rule 37 (valor -> ENTERO .)
    IGUALA          reduce using rule 37 (valor -> ENTERO .)
    OPAND           reduce using rule 37 (valor -> ENTERO .)
    OPOR            reduce using rule 37 (valor -> ENTERO .)
    OPXOR           reduce using rule 37 (valor -> ENTERO .)
    AND             reduce using rule 37 (valor -> ENTERO .)
    OR              reduce using rule 37 (valor -> ENTERO .)
    RPAREN          reduce using rule 37 (valor -> ENTERO .)


state 18

    (39) valor -> CADENA .

    MAS             reduce using rule 39 (valor -> CADENA .)
    RESTA           reduce using rule 39 (valor -> CADENA .)
    DIV             reduce using rule 39 (valor -> CADENA .)
    PROD            reduce using rule 39 (valor -> CADENA .)
    POTENCIA        reduce using rule 39 (valor -> CADENA .)
    MOD             reduce using rule 39 (valor -> CADENA .)
    MAYOR           reduce using rule 39 (valor -> CADENA .)
    MENOR           reduce using rule 39 (valor -> CADENA .)
    MAYORIGU        reduce using rule 39 (valor -> CADENA .)
    MENORIGU        reduce using rule 39 (valor -> CADENA .)
    DIFERENTE       reduce using rule 39 (valor -> CADENA .)
    ENTERO          reduce using rule 39 (valor -> CADENA .)
    VARIABLE        reduce using rule 39 (valor -> CADENA .)
    CADENA          reduce using rule 39 (valor -> CADENA .)
    DECIMAL         reduce using rule 39 (valor -> CADENA .)
    $end            reduce using rule 39 (valor -> CADENA .)
    IGUALA          reduce using rule 39 (valor -> CADENA .)
    OPAND           reduce using rule 39 (valor -> CADENA .)
    OPOR            reduce using rule 39 (valor -> CADENA .)
    OPXOR           reduce using rule 39 (valor -> CADENA .)
    AND             reduce using rule 39 (valor -> CADENA .)
    OR              reduce using rule 39 (valor -> CADENA .)
    RPAREN          reduce using rule 39 (valor -> CADENA .)


state 19

    (40) valor -> DECIMAL .

    MAS             reduce using rule 40 (valor -> DECIMAL .)
    RESTA           reduce using rule 40 (valor -> DECIMAL .)
    DIV             reduce using rule 40 (valor -> DECIMAL .)
    PROD            reduce using rule 40 (valor -> DECIMAL .)
    POTENCIA        reduce using rule 40 (valor -> DECIMAL .)
    MOD             reduce using rule 40 (valor -> DECIMAL .)
    MAYOR           reduce using rule 40 (valor -> DECIMAL .)
    MENOR           reduce using rule 40 (valor -> DECIMAL .)
    MAYORIGU        reduce using rule 40 (valor -> DECIMAL .)
    MENORIGU        reduce using rule 40 (valor -> DECIMAL .)
    DIFERENTE       reduce using rule 40 (valor -> DECIMAL .)
    ENTERO          reduce using rule 40 (valor -> DECIMAL .)
    VARIABLE        reduce using rule 40 (valor -> DECIMAL .)
    CADENA          reduce using rule 40 (valor -> DECIMAL .)
    DECIMAL         reduce using rule 40 (valor -> DECIMAL .)
    $end            reduce using rule 40 (valor -> DECIMAL .)
    IGUALA          reduce using rule 40 (valor -> DECIMAL .)
    OPAND           reduce using rule 40 (valor -> DECIMAL .)
    OPOR            reduce using rule 40 (valor -> DECIMAL .)
    OPXOR           reduce using rule 40 (valor -> DECIMAL .)
    AND             reduce using rule 40 (valor -> DECIMAL .)
    OR              reduce using rule 40 (valor -> DECIMAL .)
    RPAREN          reduce using rule 40 (valor -> DECIMAL .)


state 20

    (17) comparacion -> expresion operadorCom . expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    expresion                      shift and go to state 47
    valor                          shift and go to state 12

state 21

    (26) operadorCom -> MAYOR .

    ENTERO          reduce using rule 26 (operadorCom -> MAYOR .)
    VARIABLE        reduce using rule 26 (operadorCom -> MAYOR .)
    CADENA          reduce using rule 26 (operadorCom -> MAYOR .)
    DECIMAL         reduce using rule 26 (operadorCom -> MAYOR .)


state 22

    (27) operadorCom -> MENOR .

    ENTERO          reduce using rule 27 (operadorCom -> MENOR .)
    VARIABLE        reduce using rule 27 (operadorCom -> MENOR .)
    CADENA          reduce using rule 27 (operadorCom -> MENOR .)
    DECIMAL         reduce using rule 27 (operadorCom -> MENOR .)


state 23

    (28) operadorCom -> MAYORIGU .

    ENTERO          reduce using rule 28 (operadorCom -> MAYORIGU .)
    VARIABLE        reduce using rule 28 (operadorCom -> MAYORIGU .)
    CADENA          reduce using rule 28 (operadorCom -> MAYORIGU .)
    DECIMAL         reduce using rule 28 (operadorCom -> MAYORIGU .)


state 24

    (29) operadorCom -> MENORIGU .

    ENTERO          reduce using rule 29 (operadorCom -> MENORIGU .)
    VARIABLE        reduce using rule 29 (operadorCom -> MENORIGU .)
    CADENA          reduce using rule 29 (operadorCom -> MENORIGU .)
    DECIMAL         reduce using rule 29 (operadorCom -> MENORIGU .)


state 25

    (30) operadorCom -> DIFERENTE .

    ENTERO          reduce using rule 30 (operadorCom -> DIFERENTE .)
    VARIABLE        reduce using rule 30 (operadorCom -> DIFERENTE .)
    CADENA          reduce using rule 30 (operadorCom -> DIFERENTE .)
    DECIMAL         reduce using rule 30 (operadorCom -> DIFERENTE .)


state 26

    (31) operadorCom -> sentenciaIgualA .

    ENTERO          reduce using rule 31 (operadorCom -> sentenciaIgualA .)
    VARIABLE        reduce using rule 31 (operadorCom -> sentenciaIgualA .)
    CADENA          reduce using rule 31 (operadorCom -> sentenciaIgualA .)
    DECIMAL         reduce using rule 31 (operadorCom -> sentenciaIgualA .)


state 27

    (10) sentenciaIgualA -> valor . IGUALA valor

    IGUALA          shift and go to state 48


state 28

    (38) valor -> VARIABLE .

    IGUALA          reduce using rule 38 (valor -> VARIABLE .)
    MAS             reduce using rule 38 (valor -> VARIABLE .)
    RESTA           reduce using rule 38 (valor -> VARIABLE .)
    DIV             reduce using rule 38 (valor -> VARIABLE .)
    PROD            reduce using rule 38 (valor -> VARIABLE .)
    POTENCIA        reduce using rule 38 (valor -> VARIABLE .)
    MOD             reduce using rule 38 (valor -> VARIABLE .)
    $end            reduce using rule 38 (valor -> VARIABLE .)
    OPAND           reduce using rule 38 (valor -> VARIABLE .)
    OPOR            reduce using rule 38 (valor -> VARIABLE .)
    OPXOR           reduce using rule 38 (valor -> VARIABLE .)
    AND             reduce using rule 38 (valor -> VARIABLE .)
    OR              reduce using rule 38 (valor -> VARIABLE .)
    RPAREN          reduce using rule 38 (valor -> VARIABLE .)
    MAYOR           reduce using rule 38 (valor -> VARIABLE .)
    MENOR           reduce using rule 38 (valor -> VARIABLE .)
    MAYORIGU        reduce using rule 38 (valor -> VARIABLE .)
    MENORIGU        reduce using rule 38 (valor -> VARIABLE .)
    DIFERENTE       reduce using rule 38 (valor -> VARIABLE .)
    ENTERO          reduce using rule 38 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 38 (valor -> VARIABLE .)
    CADENA          reduce using rule 38 (valor -> VARIABLE .)
    DECIMAL         reduce using rule 38 (valor -> VARIABLE .)


state 29

    (18) comparacionLog -> comparacion operadorLog . comparacion
    (17) comparacion -> . expresion operadorCom expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    comparacion                    shift and go to state 49
    expresion                      shift and go to state 50
    valor                          shift and go to state 12

state 30

    (32) operadorLog -> OPAND .

    ENTERO          reduce using rule 32 (operadorLog -> OPAND .)
    VARIABLE        reduce using rule 32 (operadorLog -> OPAND .)
    CADENA          reduce using rule 32 (operadorLog -> OPAND .)
    DECIMAL         reduce using rule 32 (operadorLog -> OPAND .)


state 31

    (33) operadorLog -> OPOR .

    ENTERO          reduce using rule 33 (operadorLog -> OPOR .)
    VARIABLE        reduce using rule 33 (operadorLog -> OPOR .)
    CADENA          reduce using rule 33 (operadorLog -> OPOR .)
    DECIMAL         reduce using rule 33 (operadorLog -> OPOR .)


state 32

    (34) operadorLog -> OPXOR .

    ENTERO          reduce using rule 34 (operadorLog -> OPXOR .)
    VARIABLE        reduce using rule 34 (operadorLog -> OPXOR .)
    CADENA          reduce using rule 34 (operadorLog -> OPXOR .)
    DECIMAL         reduce using rule 34 (operadorLog -> OPXOR .)


state 33

    (35) operadorLog -> AND .

    ENTERO          reduce using rule 35 (operadorLog -> AND .)
    VARIABLE        reduce using rule 35 (operadorLog -> AND .)
    CADENA          reduce using rule 35 (operadorLog -> AND .)
    DECIMAL         reduce using rule 35 (operadorLog -> AND .)


state 34

    (36) operadorLog -> OR .

    ENTERO          reduce using rule 36 (operadorLog -> OR .)
    VARIABLE        reduce using rule 36 (operadorLog -> OR .)
    CADENA          reduce using rule 36 (operadorLog -> OR .)
    DECIMAL         reduce using rule 36 (operadorLog -> OR .)


state 35

    (11) asignacion -> VARIABLE IGUAL . expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    expresion                      shift and go to state 51
    valor                          shift and go to state 12

state 36

    (19) expresion -> valor operadorMat . expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    valor                          shift and go to state 12
    expresion                      shift and go to state 52

state 37

    (20) operadorMat -> MAS .

    ENTERO          reduce using rule 20 (operadorMat -> MAS .)
    VARIABLE        reduce using rule 20 (operadorMat -> MAS .)
    CADENA          reduce using rule 20 (operadorMat -> MAS .)
    DECIMAL         reduce using rule 20 (operadorMat -> MAS .)


state 38

    (21) operadorMat -> RESTA .

    ENTERO          reduce using rule 21 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 21 (operadorMat -> RESTA .)
    CADENA          reduce using rule 21 (operadorMat -> RESTA .)
    DECIMAL         reduce using rule 21 (operadorMat -> RESTA .)


state 39

    (22) operadorMat -> DIV .

    ENTERO          reduce using rule 22 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 22 (operadorMat -> DIV .)
    CADENA          reduce using rule 22 (operadorMat -> DIV .)
    DECIMAL         reduce using rule 22 (operadorMat -> DIV .)


state 40

    (23) operadorMat -> PROD .

    ENTERO          reduce using rule 23 (operadorMat -> PROD .)
    VARIABLE        reduce using rule 23 (operadorMat -> PROD .)
    CADENA          reduce using rule 23 (operadorMat -> PROD .)
    DECIMAL         reduce using rule 23 (operadorMat -> PROD .)


state 41

    (24) operadorMat -> POTENCIA .

    ENTERO          reduce using rule 24 (operadorMat -> POTENCIA .)
    VARIABLE        reduce using rule 24 (operadorMat -> POTENCIA .)
    CADENA          reduce using rule 24 (operadorMat -> POTENCIA .)
    DECIMAL         reduce using rule 24 (operadorMat -> POTENCIA .)


state 42

    (25) operadorMat -> MOD .

    ENTERO          reduce using rule 25 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 25 (operadorMat -> MOD .)
    CADENA          reduce using rule 25 (operadorMat -> MOD .)
    DECIMAL         reduce using rule 25 (operadorMat -> MOD .)


state 43

    (8) sentenciaIf -> IF LPAREN . comparacion RPAREN DOSPUNTOS algoritmo
    (17) comparacion -> . expresion operadorCom expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    comparacion                    shift and go to state 53
    expresion                      shift and go to state 50
    valor                          shift and go to state 12

state 44

    (9) sentenciaWhile -> WHILE LPAREN . comparacion RPAREN DOSPUNTOS algoritmo
    (17) comparacion -> . expresion operadorCom expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    comparacion                    shift and go to state 54
    expresion                      shift and go to state 50
    valor                          shift and go to state 12

state 45

    (14) print -> PRINT LPAREN . expresion RPAREN
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    expresion                      shift and go to state 55
    valor                          shift and go to state 12

state 46

    (15) puts -> PUTS expresion .

    $end            reduce using rule 15 (puts -> PUTS expresion .)


state 47

    (17) comparacion -> expresion operadorCom expresion .

    OPAND           reduce using rule 17 (comparacion -> expresion operadorCom expresion .)
    OPOR            reduce using rule 17 (comparacion -> expresion operadorCom expresion .)
    OPXOR           reduce using rule 17 (comparacion -> expresion operadorCom expresion .)
    AND             reduce using rule 17 (comparacion -> expresion operadorCom expresion .)
    OR              reduce using rule 17 (comparacion -> expresion operadorCom expresion .)
    $end            reduce using rule 17 (comparacion -> expresion operadorCom expresion .)
    RPAREN          reduce using rule 17 (comparacion -> expresion operadorCom expresion .)


state 48

    (10) sentenciaIgualA -> valor IGUALA . valor
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    valor                          shift and go to state 56

state 49

    (18) comparacionLog -> comparacion operadorLog comparacion .

    $end            reduce using rule 18 (comparacionLog -> comparacion operadorLog comparacion .)


state 50

    (17) comparacion -> expresion . operadorCom expresion
    (26) operadorCom -> . MAYOR
    (27) operadorCom -> . MENOR
    (28) operadorCom -> . MAYORIGU
    (29) operadorCom -> . MENORIGU
    (30) operadorCom -> . DIFERENTE
    (31) operadorCom -> . sentenciaIgualA
    (10) sentenciaIgualA -> . valor IGUALA valor
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    MAYOR           shift and go to state 21
    MENOR           shift and go to state 22
    MAYORIGU        shift and go to state 23
    MENORIGU        shift and go to state 24
    DIFERENTE       shift and go to state 25
    ENTERO          shift and go to state 17
    VARIABLE        shift and go to state 28
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    operadorCom                    shift and go to state 20
    sentenciaIgualA                shift and go to state 26
    valor                          shift and go to state 27

state 51

    (11) asignacion -> VARIABLE IGUAL expresion .

    $end            reduce using rule 11 (asignacion -> VARIABLE IGUAL expresion .)


state 52

    (19) expresion -> valor operadorMat expresion .

    MAYOR           reduce using rule 19 (expresion -> valor operadorMat expresion .)
    MENOR           reduce using rule 19 (expresion -> valor operadorMat expresion .)
    MAYORIGU        reduce using rule 19 (expresion -> valor operadorMat expresion .)
    MENORIGU        reduce using rule 19 (expresion -> valor operadorMat expresion .)
    DIFERENTE       reduce using rule 19 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 19 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 19 (expresion -> valor operadorMat expresion .)
    CADENA          reduce using rule 19 (expresion -> valor operadorMat expresion .)
    DECIMAL         reduce using rule 19 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 19 (expresion -> valor operadorMat expresion .)
    OPAND           reduce using rule 19 (expresion -> valor operadorMat expresion .)
    OPOR            reduce using rule 19 (expresion -> valor operadorMat expresion .)
    OPXOR           reduce using rule 19 (expresion -> valor operadorMat expresion .)
    AND             reduce using rule 19 (expresion -> valor operadorMat expresion .)
    OR              reduce using rule 19 (expresion -> valor operadorMat expresion .)
    RPAREN          reduce using rule 19 (expresion -> valor operadorMat expresion .)


state 53

    (8) sentenciaIf -> IF LPAREN comparacion . RPAREN DOSPUNTOS algoritmo

    RPAREN          shift and go to state 57


state 54

    (9) sentenciaWhile -> WHILE LPAREN comparacion . RPAREN DOSPUNTOS algoritmo

    RPAREN          shift and go to state 58


state 55

    (14) print -> PRINT LPAREN expresion . RPAREN

    RPAREN          shift and go to state 59


state 56

    (10) sentenciaIgualA -> valor IGUALA valor .

    ENTERO          reduce using rule 10 (sentenciaIgualA -> valor IGUALA valor .)
    VARIABLE        reduce using rule 10 (sentenciaIgualA -> valor IGUALA valor .)
    CADENA          reduce using rule 10 (sentenciaIgualA -> valor IGUALA valor .)
    DECIMAL         reduce using rule 10 (sentenciaIgualA -> valor IGUALA valor .)


state 57

    (8) sentenciaIf -> IF LPAREN comparacion RPAREN . DOSPUNTOS algoritmo

    DOSPUNTOS       shift and go to state 60


state 58

    (9) sentenciaWhile -> WHILE LPAREN comparacion RPAREN . DOSPUNTOS algoritmo

    DOSPUNTOS       shift and go to state 61


state 59

    (14) print -> PRINT LPAREN expresion RPAREN .

    $end            reduce using rule 14 (print -> PRINT LPAREN expresion RPAREN .)


state 60

    (8) sentenciaIf -> IF LPAREN comparacion RPAREN DOSPUNTOS . algoritmo
    (1) algoritmo -> . imprimir
    (2) algoritmo -> . asignacion
    (3) algoritmo -> . expresion
    (4) algoritmo -> . comparacion
    (5) algoritmo -> . sentenciaIf
    (6) algoritmo -> . comparacionLog
    (7) algoritmo -> . sentenciaWhile
    (12) imprimir -> . print
    (13) imprimir -> . puts
    (11) asignacion -> . VARIABLE IGUAL expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (17) comparacion -> . expresion operadorCom expresion
    (8) sentenciaIf -> . IF LPAREN comparacion RPAREN DOSPUNTOS algoritmo
    (18) comparacionLog -> . comparacion operadorLog comparacion
    (9) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN DOSPUNTOS algoritmo
    (14) print -> . PRINT LPAREN expresion RPAREN
    (15) puts -> . PUTS expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    VARIABLE        shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    PRINT           shift and go to state 15
    PUTS            shift and go to state 16
    ENTERO          shift and go to state 17
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    comparacion                    shift and go to state 5
    algoritmo                      shift and go to state 62
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    expresion                      shift and go to state 4
    sentenciaIf                    shift and go to state 6
    comparacionLog                 shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    print                          shift and go to state 9
    puts                           shift and go to state 10
    valor                          shift and go to state 12

state 61

    (9) sentenciaWhile -> WHILE LPAREN comparacion RPAREN DOSPUNTOS . algoritmo
    (1) algoritmo -> . imprimir
    (2) algoritmo -> . asignacion
    (3) algoritmo -> . expresion
    (4) algoritmo -> . comparacion
    (5) algoritmo -> . sentenciaIf
    (6) algoritmo -> . comparacionLog
    (7) algoritmo -> . sentenciaWhile
    (12) imprimir -> . print
    (13) imprimir -> . puts
    (11) asignacion -> . VARIABLE IGUAL expresion
    (16) expresion -> . valor
    (19) expresion -> . valor operadorMat expresion
    (17) comparacion -> . expresion operadorCom expresion
    (8) sentenciaIf -> . IF LPAREN comparacion RPAREN DOSPUNTOS algoritmo
    (18) comparacionLog -> . comparacion operadorLog comparacion
    (9) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN DOSPUNTOS algoritmo
    (14) print -> . PRINT LPAREN expresion RPAREN
    (15) puts -> . PUTS expresion
    (37) valor -> . ENTERO
    (38) valor -> . VARIABLE
    (39) valor -> . CADENA
    (40) valor -> . DECIMAL

    VARIABLE        shift and go to state 11
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    PRINT           shift and go to state 15
    PUTS            shift and go to state 16
    ENTERO          shift and go to state 17
    CADENA          shift and go to state 18
    DECIMAL         shift and go to state 19

    comparacion                    shift and go to state 5
    algoritmo                      shift and go to state 63
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    expresion                      shift and go to state 4
    sentenciaIf                    shift and go to state 6
    comparacionLog                 shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    print                          shift and go to state 9
    puts                           shift and go to state 10
    valor                          shift and go to state 12

state 62

    (8) sentenciaIf -> IF LPAREN comparacion RPAREN DOSPUNTOS algoritmo .

    $end            reduce using rule 8 (sentenciaIf -> IF LPAREN comparacion RPAREN DOSPUNTOS algoritmo .)


state 63

    (9) sentenciaWhile -> WHILE LPAREN comparacion RPAREN DOSPUNTOS algoritmo .

    $end            reduce using rule 9 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN DOSPUNTOS algoritmo .)

